using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace TestCW
{
    class KeysDCT
    {
        public static double[,] cos_t = { {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0},
                            {0.9807853, 0.8314696, 0.5555702, 0.1950903, -0.1950903,-0.5555702,-0.8314696,-0.9807853},
                            {0.9238795, 0.3826834,-0.3826834,-0.9238795, -0.9238795,-0.3826834, 0.3826834, 0.9238795},
                            {0.8314696,-0.1950903,-0.9807853,-0.5555702, 0.5555702, 0.9807853, 0.1950903,-0.8314696},
                            {0.7071068,-0.7071068,-0.7071068, 0.7071068, 0.7071068,-0.7071068,-0.7071068, 0.7071068},
                            {0.5555702,-0.9807853, 0.1950903, 0.8314696, -0.8314696,-0.1950903, 0.9807853,-0.5555702},
                            {0.3826834,-0.9238795, 0.9238795,-0.3826834, -0.3826834, 0.9238795,-0.9238795, 0.3826834},
                            {0.1950903,-0.5555702, 0.8314696,-0.9807853, 0.9807853,-0.8314696, 0.5555702,-0.1950903} };


        public static double[,] e = { {0.125, 0.176777777, 0.176777777, 0.176777777, 0.176777777, 0.176777777, 0.176777777, 0.176777777},
                        {0.176777777, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25},
                        {0.176777777, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25},
                        {0.176777777, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25},
                        {0.176777777, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25},
                        {0.176777777, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25},
                        {0.176777777, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25},
                        {0.176777777, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25} };


        static KeysDCT()
        {
            //(cos_t, e) = GenCostAndE();
        }

        public static double[,] GenCost_t()
        {
            int N = 8;
            double[,] cos_t = new double[N, N];

            for (int i = 0; i < N; i++)
            {
                for (int j = 0; j < N; j++)
                {
                    if (i == 0)
                        cos_t[i, j] = 1 / Math.Sqrt(N);
                    else
                        cos_t[i, j] = (2 / Math.Sqrt(N)) * Math.Cos((2 * j + 1) * i * Math.PI / (2 * N));
                }
            }

            return cos_t;
        }

        public static (double[,], double[,]) GenCostAndE()
        {
            double[,] Cost = new double[8, 8];
            double[,] E = new double[8, 8];

            double V, U;

            for (int v = 0; v < 8; v++)
            {
                for (int u = 0; u < 8; u++)
                {
                    if (v == 0) V = 1.0 / Math.Sqrt(2);
                    else V = 1;
                    if (u == 0) U = 1.0 / Math.Sqrt(2);
                    else U = 1;

                    for (int i = 0; i < 8; i++)
                    {
                        for (int j = 0; j < 8; j++)
                        {
                            Cost[i, j] = Math.Cos(Math.PI * v * (2 * i + 1) / (2 * 8));
                            Cost[i, j] = Math.Cos(Math.PI * u * (2 * j + 1) / (2 * 8));
                        }
                    }
                    E[v, u] = U * V / (Math.Sqrt(2 * 8));
                }
            }

            return (Cost, E);
        }
    }
}
